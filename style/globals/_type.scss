/* $fontFamily:        'L Futura W01', 'Futura W04', Futura, "Century Gothic", sans-serif; */
// $fontFamily:        "ITC Avant Garde Gothic W01", Futura, "Century Gothic", sans-serif;
$fontFamily:           'Univers Next W01', 'Univers Next W04'; // 'Neue Haas Unica W01', -apple-system, "Helvetica Neue", sans-serif;
//  'Univers Next W01', 'Univers Next W04'
// $fontFamily:            -apple-system, 'Neue Haas Unica W01', "Helvetica Neue";
$fontFamilySerif:       'times'; // "Adobe Caslon Pro", papyrus, "BemboStd";


@mixin proportionalNums {
    font-variant-numeric: proportional-nums;
    -moz-font-feature-settings: "pnum";
    -ms-font-feature-settings: "pnum";
    -webkit-font-feature-settings: "pnum";
    font-feature-settings: "pnum";
}

$fontWeightThin:        100;
$fontWeightExtraLight:  200;
$fontWeightLight:       300;
$fontWeightRegular:     400;
$fontWeightMedium:      500;
$fontWeightDemi:        600;
$fontWeightBold:        700;
$fontWeightExtraBold:   800;

$leading:           		$cell * 2;

$typeTitleSize:    		  60pt;
$typeSubtitleSize:    	36pt;
$typeHeaderSize:    		36pt;
$typeXLargeSize:        48pt;
$typeLargeSize:         24pt;
$typeBodySize:      		12pt;
$typeSmallSize:     		8pt;

$typeTitleLeading:      60pt;
$typeSubtitleLeading:   36pt;
$typeHeaderLeading:     36pt;
$typeXLargeLeading:     48pt;
$typeLargeLeading:      36pt;
$typeBodyLeading:       16pt;
$typeSmallLeading:      12pt;

$headerLeftMarginOffset:
                    -1.667pt;
                    
@mixin typeStyle ($size, $weight, $tracking, $leading) {
    font-size:      $size;
    font-weight:    $weight;
    letter-spacing: $tracking;
    line-height:    $leading;
}

@mixin compactTypeStyle ($size, $leading, $scale) {
    @media (max-width: $breakMedium) {
        font-size:      $size    * $scale;
        line-height:    $leading * $scale;
    }
}

@mixin typeTitle {
    @include typeStyle($typeTitleSize, $fontWeightMedium, (1em / 32), $typeTitleLeading);
    @include compactTypeStyle($typeTitleSize, $typeTitleLeading, (2/3));
}

@mixin typeSubtitle {
    @include typeStyle($typeSubtitleSize, $fontWeightBold, (1em / 32), $typeSubtitleLeading);
    @include compactTypeStyle($typeTitleSize, $typeTitleLeading, .75);
    
}

@mixin typeHeader {
    @include typeStyle($typeHeaderSize, $fontWeightRegular, (1em / 32), $typeHeaderLeading);
    @include compactTypeStyle($typeHeaderSize, $typeHeaderLeading, .75);
}

@mixin typeXLarge {
    @include typeStyle($typeXLargeSize, $fontWeightRegular, (1em / 32), $typeXLargeLeading);
    @include compactTypeStyle($typeXLargeSize, $typeXLargeLeading, .75);
}

@mixin typeLarge {
    @include typeStyle($typeLargeSize, $fontWeightRegular, (1em / 32), $typeLargeLeading);
    @include compactTypeStyle($typeLargeSize, $typeLargeLeading, .75);
}

@mixin typeBody {
    font-family:    $fontFamily;
    @include typeStyle($typeBodySize, $fontWeightRegular, (1em / 16), $typeBodyLeading);    
}

@mixin typeSmall {
    @include typeStyle($typeSmallSize, $fontWeightMedium, (1em / 12), $typeSmallLeading);
}

@mixin smallCaps {
    font-size:      .666em;
    letter-spacing: .03125em;
    text-transform: uppercase !important;
}

@mixin typeTitleSmallCaps {
    @include        smallCaps;
    font-size:      $typeTitleSize * .75;
    font-weight:    $fontWeightBold;
    letter-spacing: (1em/16);
}

@mixin typeBodySmallCaps {
    @include        smallCaps;
    font-size:      $typeBodySize * .666;
    font-weight:    $fontWeightMedium;
    letter-spacing: (1em/8);
}

@mixin typeXLargeSmallCaps {
    @include        smallCaps;
    font-size:      $typeXLargeSize * .666;
    font-weight:    $fontWeightRegular;
    letter-spacing: (1em/16);
}

@mixin typeLargeSmallCaps {
    @include        smallCaps;
    font-size:      $typeLargeSize * .666;
    font-weight:    $fontWeightRegular;
    letter-spacing: (1em/16);
}

@mixin typeSmallSmallCaps {
    @include        smallCaps;
    font-size:      $typeSmallSize * .7;
    font-weight:    $fontWeightBold;
    letter-spacing: (1em/6);
}

@mixin typeHeaderSmallCaps {
    @include typeHeader;
}

@mixin typeLabelName {
    @include typeHeader;
    font-family: $fontFamily;
    font-size: .75rem;
    line-height: $leading;
}

@mixin linkReset {
    color: $colorType;
    text-decoration: none;
    border: 0;
}

@mixin typeOutlineClear {
    -webkit-text-stroke: 1px $colorType;
    -webkit-text-fill-color: transparent;
}

@mixin typeOutlineWhite {
    -webkit-text-stroke: 1px $colorType;
    -webkit-text-fill-color: white;
}

@mixin typeOutlineFillBlack {
    -webkit-text-fill-color: $colorType !important;
    -webkit-text-stroke: 1px $colorType;
}

@mixin navText {
    @include typeTitle;
    @include typeOutlineWhite;
    text-transform: lowercase;
}

html {
    @include typeBody;
    @include proportionalNums;
}

.typeTitle {
    @include typeTitle;
    
    &.smallCaps {
        @include typeTitleSmallCaps;
    }
}

.typeSubtitle {
    @include typeSubtitle;
}

.headerType {
    @include typeHeader;
    
    &.typeOutline, &.typeOutlineClear, &.typeOutlineWhite {
        font-weight: $fontWeightMedium;
    }
}

.bodyType, .typeBody {
    @include typeBody;
            
    &.smallCaps {
      @include typeBodySmallCaps;
    }
}

.XLargeType {
    @include typeXLarge;
            
    &.smallCaps {
      @include typeXLargeSmallCaps;
    }
}

.largeType {
    @include typeLarge;
            
    &.smallCaps {
      @include typeLargeSmallCaps;
    }
    
    
    &.typeOutline, &.typeOutlineClear, &.typeOutlineWhite {
        font-weight: $fontWeightMedium;
    }
}

.smallType, .typeSmall {
    @include typeSmall;
    
    &.smallCaps {
      @include typeSmallSmallCaps;
    }
}

.typeNav {
    @include navText;
    
    &.smallCaps, .smallCaps {
        @include typeTitleSmallCaps;
    }
}

.typeWeightBold {
    font-weight: $fontWeightBold;
}

.typeOutlineClear {
    @include typeOutlineClear;
}

.typeOutlineWhite {
    @include typeOutlineWhite;
}

.typeOutlineBlackOnHover {
    &:hover {
        @include typeOutlineFillBlack;
    }
}

a {
    @include linkReset;
}
        
p {
    
    & + p {
        margin-top: $baseline / 2;
    }
}
