/* $fontFamily:        'L Futura W01', 'Futura W04', Futura, "Century Gothic", sans-serif; */
// $fontFamily:        "ITC Avant Garde Gothic W01", Futura, "Century Gothic", sans-serif;
$fontFamily:            'Neue Haas Unica W01', -apple-system, "Helvetica Neue", sans-serif;
// $fontFamily:            -apple-system, 'Neue Haas Unica W01', "Helvetica Neue";
$fontFamilySerif:       "Adobe Caslon Pro", papyrus, "BemboStd";

$fontWeightThin:        100;
$fontWeightExtraLight:  200;
$fontWeightLight:       300;
$fontWeightRegular:     400;
$fontWeightMedium:      500;
$fontWeightDemi:        600;
$fontWeightBold:        700;
$fontWeightExtraBold:   800;

$leading:           		$cell * 2;

$typeSmallSize:     		8pt;
$typeBodySize:      		12pt;
$typeLargeSize:         18pt;
$typeHeaderSize:    		24pt;
$typeTitleSize:    		56pt;
$typeHeaderSmallCapsSize:
                    		$typeHeaderSize * .666;

$typeHeaderLeading: 		24pt;
$typeBodyLeading:       16pt;
$typeLargeLeading:      24pt;
$typeTitleLeading:      48pt;

$headerLeftMarginOffset:
                    -1.667pt;
@mixin typeTitle {
//     font-family:    $fontFamilySerif;
    font-size:      $typeTitleSize;
    font-weight:    $fontWeightExtraBold;
    letter-spacing: -(1em / 32);
    line-height:    $typeTitleLeading;
}

@mixin typeHeader {
    font-size:      $typeHeaderSize;
    font-weight:    $fontWeightMedium;
//     font-family:    $fontFamilySerif;
    letter-spacing: -(1em / 24);
    line-height:    $typeHeaderLeading;
}

@mixin typeBody {
    font-family:    $fontFamily;
    font-size:      $typeBodySize;
    font-weight:    $fontWeightLight;
    line-height:    $typeBodyLeading;
    letter-spacing: (1em / 64);
}

@mixin typeLarge {
    font-family:    $fontFamily;
    font-size:      $typeLargeSize;
    font-weight:    $fontWeightLight;
    line-height:    $typeLargeLeading;
    letter-spacing: -(1em / 64);
}

@mixin typeSmall {
    font-size:      $typeSmallSize;
    font-weight:    $fontWeightRegular;
    line-height:    12pt;
    letter-spacing: (1em/32);
}

@mixin smallCaps {
    font-size:      .666em;
    letter-spacing: .03125em;
    text-transform: uppercase !important;
}

@mixin typeBodySmallCaps {
    @include        smallCaps;
    font-size:      $typeBodySize * .666;
    font-weight:    $fontWeightRegular;
    letter-spacing: (1em/16);
}

@mixin typeLargeSmallCaps {
    @include        smallCaps;
    font-size:      $typeLargeSize * .666;
    font-weight:    $fontWeightRegular;
    letter-spacing: (1em/16);
}

@mixin typeSmallSmallCaps {
    @include        smallCaps;
    font-size:      $typeSmallSize * .7;
    font-weight:    $fontWeightMedium;
    letter-spacing: (1em/6);
}

@mixin typeHeaderSmallCaps {
    @include typeHeader;
}


@mixin typeSpaceName {
    @include typeHeader;
    font-family: $fontFamily;
    font-size: .75rem;
    line-height: $leading;
}

@mixin linkReset {
    color: $colorType;
    text-decoration: none;
    border: 0;
}

@mixin typeOutlineClear {
    -webkit-text-stroke: 1px $colorType;
    -webkit-text-fill-color: transparent;
}

@mixin typeOutlineFillBlack {
    -webkit-text-fill-color: $colorType !important;
    -webkit-text-stroke: 1px $colorType;
}

html {
    @include typeBody;
    font-variant-numeric: oldstyle-num;
}
.typeTitle {
    @include typeTitle;
}

.headerType {
    @include typeHeader;
}

.bodyType {
    @include typeBody;
            
    &.smallCaps {
      @include typeBodySmallCaps;
    }
}

.largeType {
    @include typeLarge;
            
    &.smallCaps {
      @include typeLargeSmallCaps;
    }
}

.smallType {
    @include typeSmall;
    
    &.smallCaps {
      @include typeSmallSmallCaps;
    }
}

.typeWeightBold {
    font-weight: $fontWeightBold;
}

.typeOutlineClear {
    @include typeOutlineClear;
}
        
p {
    
    & + p {
        margin-top: $baseline / 2;
    }
}
