$cardHoverScaleMin: scale3d(1.125, 1.125, 1.125);
$cardHoverScaleMax: scale3d(1.15,  1.15,  1.15);

@mixin cardStyle {
    background-color: $colorCardBackground;
    border: 3pt solid $colorType;
    padding: $cardPadding;
    transform-origin: bottom right;
    -webkit-transform-origin: bottom right;
}

@mixin cardHover {
    @include box-shadow($gutter $gutter 0 rgba(0,0,0,.6));
    @include transform($cardHoverScaleMin);
}

@mixin cardDrag {
    cursor: move;
    @include transform($cardHoverScaleMax);
    @include box-shadow($gutter $gutter 0 rgba(0,0,0,.6));
}

@mixin button {
    // @include cardStyle;
    // padding: $gutter;
    // 
    // &:hover, &:focus {
    //     @include cardHover;
    //     @include transform(scale(1.125));
    // }
    // 
    // &:active {
    //     @include transform(scale(.925));
    //     @include box-shadow(0 $gutter/6 $gutter/2 rgba(0,0,0,.125));
    // }
    
}

@mixin buttonOffset {
    // position: relative;
    // margin-left: -$gutter*1.5;
    // margin-top: -.666em;
    // left: 100%;
    // float: left;
}

.card {
    
    &.form {
        padding-left: $gutter * 2 !important;
    }
}

form {
    position: relative;
}

label {
    @include typeBody;
}

@mixin placeHolderOverride {
    color: $colorType;
    opacity: 1;
    
    &:hover {
        @include hoverAnimation;
    }
}

::-webkit-input-placeholder {
    @include placeHolderOverride;
}

:-moz-placeholder {
    @include placeHolderOverride;
}
::-moz-placeholder { 
    @include placeHolderOverride;
}
:-ms-input-placeholder { 
    @include placeHolderOverride;
}


input {
    @include resetInput;
    @include typeBody;
    color: $colorType;
    border-bottom: .125em $colorType solid;
        
    &:focus, &:hover {
        @include hoverAnimation;
    }
    
    &.offset {
        @include button;
        @include buttonOffset;
    }
    
    &[type=submit], &[type=button] {
        border: 0;
        cursor: pointer;
    }
    
    &[type=checkbox] {
        width: 1em;
        margin-left: -1.5em;
        margin-right: .5em;
    }
    
}


ul.menu {
    height: $baseline * 2;
    
    &.left {
        li {
            left: -$col*4.2;
            @include transition-property(left, opacity);
            
            &:nth-of-type(1) {
                left: 0;
            }
        }
        
        &:hover {
            li {
                left: 0;
                
                a, form {
                    padding-left: 0;
                    @include transition(padding-left .25s $defaultCurve);
                    
                    &:hover, &:active, &:focus {
                        padding-left: $gutter * 2;
                    }
                }
            }
        }    
    }
    
    &.right {
        li {
            right: -$col*4.2;
            @include transition-property(right, opacity);
            
            &:nth-of-type(1) {
                right: 0;
            }
            
            form, input {
                text-align: right;
            }
        }
        
        &:hover {
            li {
                right: 0;
                
                a, form {
                    padding-right: 0;
                    @include transition(padding-right .25s $defaultCurve);
                    
                    &:hover, &:active, &:focus {
                        padding-right: $gutter * 2;
                    }
                }
            }
        }    
    }
    
    li {
        position: relative;
        @include transition(.5s $defaultCurve);
        
        form {
            white-space: nowrap;
        }
/*
        
        &:nth-of-type(2)  { @include transition-delay(.19s); }
        &:nth-of-type(3)  { @include transition-delay(.18s); }
        &:nth-of-type(4)  { @include transition-delay(.17s); }
        &:nth-of-type(5)  { @include transition-delay(.16s); }
        &:nth-of-type(6)  { @include transition-delay(.15s); }
        &:nth-of-type(7)  { @include transition-delay(.14s); }
        &:nth-of-type(8)  { @include transition-delay(.13s); }
        &:nth-of-type(9)  { @include transition-delay(.12s); }
        &:nth-of-type(10) { @include transition-delay(.11s); }
        &:nth-of-type(11) { @include transition-delay(.10s); }
        &:nth-of-type(12) { @include transition-delay(.9s); }
        &:nth-of-type(13) { @include transition-delay(.8s); }
        &:nth-of-type(14) { @include transition-delay(.7s); }
        &:nth-of-type(15) { @include transition-delay(.6s); }
        &:nth-of-type(16) { @include transition-delay(.5s); }
        &:nth-of-type(17) { @include transition-delay(.4s); }
        &:nth-of-type(18) { @include transition-delay(.3s); }
        &:nth-of-type(19) { @include transition-delay(.2s); }
        &:nth-of-type(20) { @include transition-delay(.1s); }
*/
        
        &:nth-of-type(2)  { @include transition-delay(.1s); }
        &:nth-of-type(3)  { @include transition-delay(.2s); }
        &:nth-of-type(4)  { @include transition-delay(.3s); }
        &:nth-of-type(5)  { @include transition-delay(.4s); }
        &:nth-of-type(6)  { @include transition-delay(.5s); }
        &:nth-of-type(7)  { @include transition-delay(.6s); }
        &:nth-of-type(8)  { @include transition-delay(.7s); }
        &:nth-of-type(9)  { @include transition-delay(.8s); }
        &:nth-of-type(10) { @include transition-delay(.9s); }
        &:nth-of-type(11) { @include transition-delay(.10s); }
        &:nth-of-type(12) { @include transition-delay(.11s); }
        &:nth-of-type(13) { @include transition-delay(.12s); }
        &:nth-of-type(14) { @include transition-delay(.13s); }
        &:nth-of-type(15) { @include transition-delay(.14s); }
        &:nth-of-type(16) { @include transition-delay(.15s); }
        &:nth-of-type(17) { @include transition-delay(.16s); }
        &:nth-of-type(18) { @include transition-delay(.17s); }
        &:nth-of-type(19) { @include transition-delay(.18s); }
        &:nth-of-type(20) { @include transition-delay(.19s); }

        
    }
    
    &:hover {
        @include transition(2s $defaultCurve);
        
        li {
            
            a, form {
                position: relative;
            }
        }
    }
}

/*
ul.menu {
    @include cardStyle;
    padding: 0; // override cardStyle
    width: $col;
    position: relative;
    max-height: $baseline * 1.5;
    overflow: hidden;
    vertical-align: top;
    @include basicTransition;
    @include transition-property(opacity);
    
    &:hover {
        max-height: none;
        opacity: 1;
        
        &:after {
            opacity: 1;
        }
    }
    
    li {
        height: $baseline * 1.5;
        padding-left: .5em;
        
        &:first-of-type {
            padding-top: $baseline/2
        }
        
        a {
            border: none;
            display: block;
            width: 100%;
            height: 100%;
        }
        
        input {
            width: 95% !important;
            padding-top: 0;
            
            &[type=submit] {
                display: none;
            }
        }
    }
}
*/

textarea {
  @include resetInput;
  @include typeBody;   
  width: 100%;
  height: $baseline;
}
