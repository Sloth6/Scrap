$headerHeight:          25vh;

$cardPaddingTop:        $cell;
$cardPaddingRight:      $cell;
$cardPaddingBottom:     $cell;
$cardPaddingLeft:       $cell;

$cardPadding:           $cardPaddingTop/2 $cardPaddingRight/2 $cardPaddingBottom/2 $cardPaddingLeft/2;
$cardPaddingFat:        $cardPaddingTop $cardPaddingRight $cardPaddingBottom $cardPaddingLeft;

$articleWidthNarrow:    $col * 3;
$articleWidth:          $col * 4;
$articleWidthWide:      $col * 5;
$articleMinHeight:      $col * 3;

$menuWidth: $articleWidth;
$menuItemHeight: $leading;

$cardHoverScaleMin: scale3d(1.125, 1.125, 1.125);
$cardHoverScaleMax: scale3d(1.15,  1.15,  1.15);

$cardBorderWidth:           1pt;
$cardBorderColor:           $colorType;
$cardBorder:                $cardBorderWidth solid $cardBorderColor;
$cardBoxShadowDimensions:   $cell $cell $cell 0;
$cardBoxShadowColor:        rgba(0,0,0,1);
$cardBoxShadow:             $cardBoxShadowDimensions $cardBoxShadowColor;

@mixin cardStyle {
    background-color: $colorCardBackground;
    border: $cardBorder;
    padding: $cardPadding;
            transform-origin: bottom right;
    -webkit-transform-origin: bottom right;
}

@mixin cardHover {
    .card {
        @include box-shadow($cardBoxShadowDimensions $cardBoxShadowColor);
    }
    @include transform(translate(-$cell, -$cell));
    * { 
        border-color: $colorAccent;
    }
}

@mixin cardDrag {
    .card {
        @include box-shadow($cardBoxShadowDimensions $cardBoxShadowColor);
    }
    @include transform(translate(-$cell, -$cell));
}

@mixin button {
}

@mixin buttonOffset {
    // position: relative;
    // margin-left: -$cell*1.5;
    // margin-top: -.666em;
    // left: 100%;
    // float: left;
}

@mixin invertHover {
    background-color: $colorType;
    color: $colorCardBackground;
}

a {
    @include linkReset;
/*
    &:hover, &:active, &:focus {
        @include hoverAnimation;
    }
*/
//         border-bottom: .125em $colorType solid;
    
    &.warning {
//             color: $colorAlert;
        
        &:hover {
            @include hoverWarningAnimation;
        }
    }
    
    &.confirm {
        &:hover {
            @include hoverLinkAnimation;
        }
    }
}
    


.card {
    
    &.form {
        padding-left: $cell * 2 !important;
    }
}

form {
    position: relative;
    
    li {
        list-style: none;
        margin-top: $leading;
    }
    
    input {
        @include typeHeader;
        
        &[type=submit], &[type=button] {
            @include typeHeaderSmallCaps;
        }
    }
}

label {
    @include typeBodySmallCaps;
}

@mixin placeHolderOverride {
    color: $colorType;
    opacity: 1;
    font-style: italic;
    text-transform: lowercase;
    
    &:hover {
        @include hoverAnimation;
    }
}

::-webkit-input-placeholder {
    @include placeHolderOverride;
}

:-moz-placeholder {
    @include placeHolderOverride;
}
::-moz-placeholder { 
    @include placeHolderOverride;
}
:-ms-input-placeholder { 
    @include placeHolderOverride;
}

input {
    @include resetInput;
    @include typeBody;
    color: $colorType;
    border-bottom: $cardBorderWidth $colorType solid;
        
    &:focus, &:hover {
        @include hoverAnimation;
    }
    
    &.offset {
        @include button;
        @include buttonOffset;
    }
    
    &[type=submit], &[type=button] {
        border: 0;
        cursor: pointer;
    }
    
    &[type=checkbox] {
        width: 1em;
        margin-left: -1.5em;
        margin-right: .5em;
    }
    
    &[type=email] {
        text-transform: lowercase;
    }
    
}

ul.menu {
    position: absolute;
    display: inline-block;
    white-space: nowrap;
    border: $cardBorder;
    border-color: transparent;
    width: 0;
    top: -$cardBorderWidth;
    @include typeBody;
    @include transition(1s $defaultCurve);
    @include transition-property(left, right, background, border, width, padding);
        
    &.open {
        background: $colorCardBackground;
        border-color: $cardBorderColor;
        width: $articleWidthNarrow;
        padding: $cardPadding;
        
        &.wide {
            width: $articleWidthWide;
        }
        
        &.paddingBottom{
            padding-bottom: $broadMargin;
        }
        
        li {
            height: $menuItemHeight;
            opacity: 1;
            margin-bottom: $cell;
            
            a, form {
                position: relative;
            }
        }
    }
    
    &.hideFirst {
        
        > li {

            &.first {
            position: absolute;
            @include transition(1s $defaultCurve);
            @include transition-property(transform,
                                 -webkit-transform,
                                    -moz-transform);
            }
        }
        
        &.right {            
            &.open {
                > li.first {
                    @include transform(translate3d(500.0px, 0.0, 0.0));
                    opacity: 0;
                }
            }
        
            > li.first {
                right: $cardPaddingRight;
                @include transform(translate3d(0.0, 0.0, 0.0));
            }
        }
        
        &.left {
            &.open {
                > li.first {
                    @include transform(translate3d(-500.0px, 0.0, 0.0));
                    opacity: 0;
                }
            }

            > li.first {
                left: $cardPaddingRight;
                @include transform(translate3d(-500.0px, 0.0, 0.0));
            }
        }
    }
    
    &.left {
        float: left;
        left: -$cardBorderWidth;
        
        li, &.open li.hidden {
            @include transform(translate3d(-500.0px, 0.0, 0.0));
            
            &.first {
                @include transform(translate3d(0, 0, 0))
            }
                        
            a {
                position: relative;
                left: 0;
                @include transition(.25s $defaultCurve);
                                
                &:hover, &:active, &:focus {
                    left: $cell;
                }
            }
        }
        
        &.open {
            li {
                @include transform(translate3d(0, 0, 0))
            }
        }    
    }
    
    &.right {
        right: -$cardBorderWidth;
        
        li, &.open li.hidden {
            @include transform(translate3d(500.0px, 0.0, 0.0));
            
            &.first {
                @include transform(translate3d(0, 0, 0))
            }
            
            input {
                text-align: left;
                
                &[type=button], &[type=submit] {
                    text-align: right;
                }
            }
            
            a {
                position: relative;
                right: 0;
                @include transition(.25s $defaultCurve);
                
                &:hover, &:active, &:focus {
                    left: $cell;
                }
            }
        }
        
        &.open {
            li {
                @include transform(translate3d(0, 0, 0))
            }
        }
    }
    
    &.hidden {
        
        &.left {
            left: -$menuWidth * 1.5;
        }
        
        &.right {
            right: -$menuWidth * 1.5;
        }
    }
    
    section { 
        padding-bottom: $leading;
    }
    
    li {
        opacity: 0;
        height: 0;
        margin-bottom: 0;
        position: relative;
        @include transition(1s $defaultCurve);
        @include transition-property(left, right, height, opacity, margin-bottom,
                                     transform,
                             -webkit-transform,
                                -moz-transform);
                                
        &.inputText {
            margin-bottom: $leading * 2;
        }
                                        
        &.heading {
            @include typeBodySmallCaps;
        }
        
        &.hidden {
            height: 0;
            margin: 0;
            opacity: 0;
        }
        
        &.backButton {
        }
                
        &.first {
            opacity: 1;
            height: $menuItemHeight;
            cursor: pointer;
            margin-top: $cell/2;
        }
        
        input {
            width: 100%;
            @include transition(.5s $defaultCurve);
            @include transition-property(width);
        }
        
        > a {
            display: block;
            width: 100%;
            position: relative;
            @include transition-property(left, right, transform,
                                              -webkit-transform,
                                                 -moz-transform);
        }
/*
        
        &:nth-of-type(2)  { @include transition-delay(.19s); }
        &:nth-of-type(3)  { @include transition-delay(.18s); }
        &:nth-of-type(4)  { @include transition-delay(.17s); }
        &:nth-of-type(5)  { @include transition-delay(.16s); }
        &:nth-of-type(6)  { @include transition-delay(.15s); }
        &:nth-of-type(7)  { @include transition-delay(.14s); }
        &:nth-of-type(8)  { @include transition-delay(.13s); }
        &:nth-of-type(9)  { @include transition-delay(.12s); }
        &:nth-of-type(10) { @include transition-delay(.11s); }
        &:nth-of-type(11) { @include transition-delay(.10s); }
        &:nth-of-type(12) { @include transition-delay(.9s); }
        &:nth-of-type(13) { @include transition-delay(.8s); }
        &:nth-of-type(14) { @include transition-delay(.7s); }
        &:nth-of-type(15) { @include transition-delay(.6s); }
        &:nth-of-type(16) { @include transition-delay(.5s); }
        &:nth-of-type(17) { @include transition-delay(.4s); }
        &:nth-of-type(18) { @include transition-delay(.3s); }
        &:nth-of-type(19) { @include transition-delay(.2s); }
        &:nth-of-type(20) { @include transition-delay(.1s); }
*/
        
        &:nth-of-type(2)  { @include transition-delay(.1s); }
        &:nth-of-type(3)  { @include transition-delay(.2s); }
        &:nth-of-type(4)  { @include transition-delay(.3s); }
        &:nth-of-type(5)  { @include transition-delay(.4s); }
        &:nth-of-type(6)  { @include transition-delay(.5s); }
        &:nth-of-type(7)  { @include transition-delay(.6s); }
        &:nth-of-type(8)  { @include transition-delay(.7s); }
        &:nth-of-type(9)  { @include transition-delay(.8s); }
        &:nth-of-type(10) { @include transition-delay(.9s); }
        &:nth-of-type(11) { @include transition-delay(.10s); }
        &:nth-of-type(12) { @include transition-delay(.11s); }
        &:nth-of-type(13) { @include transition-delay(.12s); }
        &:nth-of-type(14) { @include transition-delay(.13s); }
        &:nth-of-type(15) { @include transition-delay(.14s); }
        &:nth-of-type(16) { @include transition-delay(.15s); }
        &:nth-of-type(17) { @include transition-delay(.16s); }
        &:nth-of-type(18) { @include transition-delay(.17s); }
        &:nth-of-type(19) { @include transition-delay(.18s); }
        &:nth-of-type(20) { @include transition-delay(.19s); }
    }
}

.mask {
    height: 100vh;
    width: 100vw;
    position: absolute;
    top: 0;
    left: 0;
    background: transparent;
    z-index: 10;
}


textarea {
  @include resetInput;
  @include typeBody;   
  width: 100%;
  height: $baseline;
}
