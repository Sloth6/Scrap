- var root = 'https://s3-us-west-2.amazonaws.com/scrapimagesteamnap/'
- var classes = [ element.contentType, "element", "slider", "draggable", collection.spaceKey]
- var posString = "position:absolute;"
//- - var interactiveTypes = ['soundcloud', 'youtube']

if (element.contentType == 'soundcloud' || element.contentType == 'youtube')
  - classes.push('playable')

if element.contentType == 'cover'
  -var content = JSON.parse(element.content)
  -var coverClasses = ['element','cover','closed','draggable','slider','sliding', content.spaceKey, collection.spaceKey]
  article(id=element.id, data-contenttype='cover', data-content=element.content,  data-spacekey=collection.spaceKey, class=coverClasses)
    .card.cardHover.cardDrag.colored(style="background-color:"+content.backgroundColor)
      - var image = 'http://lorempixel.com/' + Math.floor(400 + Math.random() * 200) + '/' + Math.floor(300 + Math.random() * 200)
      section.title
        h1.collectionTitle.typeTitle.typeOutlineClear
        h2.peekTitle.bodyType.typeBody.typeWeightBold
        p.rename
          a.smallCaps.bodyType.confirm Rename
      ul.users.menu.slideIn.left.canOpen
        //- li.user foo
        //- li.user bar
        li.user.add
          form.addUser(data-spacekey=collection.spaceKey)
            input(type="email", name="user[email]", placeholder="email")
            input(type="submit", value="→")
            label.smallType.smallCaps Share this pack
    //- .collectionContent(class=collection.spaceKey, style="display:none;")
else
  article(id=element.id, class=classes, style= posString, data-contenttype=element.contentType, data-creatorid=element.creatorId, data-spacekey=collection.spaceKey, data-content=element.content)
    .content
      .elementControls
        - if (typeof(collection.nameMap) !== "undefined") {
          author!= collection.nameMap[element.creatorId].name
        - }    
        a.elementDeleteButton.warning.bodyType.smallCaps Delete
      case element.contentType
        when 'file'
          .decorative.fold
      .card.cardHover.cardDrag(class=element.contentType)
        case element.contentType
          when 'image'
            - var content = JSON.parse(element.content)
            - if (typeof(content.original_url) !== 'undefined'){
              img(src= content.original_url)
            - } else { 
              img(src= root+collection.spaceKey+"/"+content.key+'/small.jpg')
            - }
    
          when 'gif'
            -var content = JSON.parse(element.content)
            - if (typeof(content.original_url) !== 'undefined'){
              img(src= content.original_url)
            - } else {
              img(src= root+collection.spaceKey+"/"+content.key+'/normal.gif')
            - }
    
          when 'website'
            -var content = JSON.parse(element.content)
            -var url = decodeURIComponent(content.url)
            .text
              header
                h1.headerType!=content.title
                .url.smallType.smallCaps!=content.domain
              .description.smallType!=content.description
            img(src=content.image)
            a(href=url, target='_blank', title='Open “' + content.title + '” in a new tab')
    
          when 'file'
            header
              - name = element.content.split('/').pop()
              //- - extension = name.pop()
              h1.headerType.title=name.split('.')[0]
              p.extension.smallCaps.bodyType=name.split('.').pop()
            ul.cardActions
              li.right
                a.download.confirm(href='#') Download

          when 'video'
            video()
              source(src=element.content)
              img(src=element.content+'.png')
          
          when 'soundcloud'
            -var content = JSON.parse(element.content)
            //- title, description, thumbnail_url, html, author_name, author_url
            .preview(title='Play “' + content.title + '”')
              img.soundcloudThumbnail(src=content.thumbnail_url)
            header
              .top
                h1.headerType.title!=content.title
                .artist.smallType!=content.author_name
              .detail
                .source.smallType.smallCaps SoundCloud
          
          when 'youtube'
            -var content = JSON.parse(element.content)
            .preview(title='Play “' + content.title + '”')
              img.youtubeThumbnail(src=content.image, style='width:480px; height: 270px')
            header
              .top
                h1.headerType.title!=content.title
                .artist.smallType Artist
              .detail
                .source.smallType.smallCaps youtube

          when 'text'
            //- textarea.modify(name='content', style='height:300px')!=element.content
            .editable(contentEditable="true", designmode="on")
              !{element.content}
          default
            p!=element.content