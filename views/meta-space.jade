extends layout

block scripts
  include partials/baseScripts
  script(src="/js/globals.js")
  script.
    window.io = {
      connect: function() {
        var socketStub = {
          emit: function() {}
        };
        return socketStub;
      }
    }
  script(src="/js/jquery/jquery.autogrowtextarea.min.js")
  script(src="/js/jquery/jquery.transit.min.js")
  script(src="/js/jquery/jquery-mousewheel.min.js")

  script(src="/js/screenDrag.js")
  script(src="/js/meta-space/dragSpace.js")
  script(src="/js/meta-space/enterSpace.js")
  script(src="/js/meta-space/closeSpace.js")

block content
  header 
    a(class="home",href='/', style="display:none;") Home
  section.space
  
    section.content
      each space in user.spaces
        - cssString = "z-index:#{1};-webkit-transform:scale3d(#{1},#{1},1.0); transform:scale3d(#{1},#{1},1.0);"
        - imageCss = "background-image:url(https://s3-us-west-2.amazonaws.com/scrapimagesteamnap/"+space.spaceKey+"/screenshot.jpg);"
        div.spacePreview.draggable(data-spaceId = space.spaceKey, style=cssString+imageCss)
          h1= space.name
        - x += 375
      //- each element in user.spaces
      //-   if element.z > maxZ
      //-     - maxZ = element.z

      //-   if (element.x + 300 * element.scale) > maxX
      //-     - maxX = (element.x + 300 * element.scale)

      //-   if element.x < minX
      //-     - minX = element.x

      //-   if element.y+300 > maxY
      //-     - maxY = element.y+300

      //-   if element.y < minY
      //-     - minY = element.y

      //-   if element.scale < minScale
      //-     - minScale = element.scale
      //-   - var classes = [ "color"+colors[element.creatorId], element.contentType, "draggable" ]
      //-   article(id=element.id, class= classes, style="top:#{element.y}px;left:#{element.x}px;z-index:#{element.z};-webkit-transform:scale3d(#{element.scale},#{element.scale},1.0); transform:scale3d(#{element.scale},#{element.scale},1.0);")
      //-     header(style="-webkit-transform:scale3d(#{1/element.scale},#{1/element.scale},1.0); transform:scale3d(#{1/element.scale},#{1/element.scale},1.0);", data-scale="#{1/element.scale}")
      //-       author= nameMap[element.creatorId]
      //-     case element.contentType
      //-       when 'image'
      //-         include partials/contentTypes/image
      //-       when 'gif'
      //-         include partials/contentTypes/image
      //-       when 'website'
      //-         include partials/contentTypes/website
      //-       default
      //-         include partials/contentTypes/text
      //-     .resize.ui-resizable-handle.ui-resizable-se(style="-webkit-transform:scale3d(#{1/element.scale},#{1/element.scale},1.0); transform:scale3d(#{1/element.scale},#{1/element.scale},1.0);", data-scale="#{1/element.scale}")
